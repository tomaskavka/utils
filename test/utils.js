// Generated by CoffeeScript 1.7.1
var should, utils;

should = require('chai').should();

utils = require('../lib/utils.js');

describe('isDomain', function() {
  it('wrong domains', function() {
    utils.isDomain({
      domain: 'tomaskavka.cz'
    }).should.be["false"];
    utils.isDomain('http://www.tomaskavka.cz').should.be["false"];
    utils.isDomain('www.tomaskavka.cz').should.be["false"];
    return utils.isDomain('192.168.0.19').should.be["false"];
  });
  return it('OK', function() {
    return utils.isDomain('tomaskavka.cz').should.be["true"];
  });
});

describe('isIPAddress', function() {
  it('wrong IP addresses', function() {
    utils.isIPAddress({
      ip: '256.2.2'
    }).should.be["false"];
    utils.isIPAddress('http://www.tomaskavka.cz').should.be["false"];
    utils.isIPAddress('256.2.2').should.be["false"];
    return utils.isIPAddress('256.168.0.19').should.be["false"];
  });
  return it('OK', function() {
    return utils.isIPAddress('225.19.19.19').should.be["true"];
  });
});

describe('isURL', function() {
  it('wrong URL addresses', function() {
    utils.isURL({
      url: 'tomaskavka.cz'
    }).should.be["false"];
    utils.isURL('tomaskavka.cz').should.be["false"];
    utils.isURL('ftp://www.tomaskavka.cz').should.be["false"];
    return utils.isURL('225.168.0.19').should.be["false"];
  });
  return it('OK', function() {
    utils.isURL('http://www.tomaskavka.cz').should.be["true"];
    utils.isURL('https://www.tomaskavka.cz').should.be["true"];
    return utils.isURL('http://www.tomaskavka.cz/test').should.be["true"];
  });
});

describe('between', function() {
  describe('number', function() {
    it('missing', function() {
      return utils.between().should.be["false"];
    });
    return it('wrong type', function() {
      return utils.between({
        test: 'ok'
      }).should.be["false"];
    });
  });
  describe('min', function() {
    it('missing', function() {
      return utils.between(19).should.be["false"];
    });
    return it('wrong type', function() {
      return utils.between(19, {
        test: 'ok'
      }).should.be["false"];
    });
  });
  describe('max', function() {
    it('missing', function() {
      return utils.between(19, 0).should.be["false"];
    });
    return it('wrong type', function() {
      return utils.between(19, 0, {
        test: 'ok'
      }).should.be["false"];
    });
  });
  return it('OK', function() {
    utils.between(19, 20, 210).should.be["false"];
    utils.between(19, 0, 18).should.be["false"];
    utils.between(19, 19, 20).should.be["true"];
    utils.between(19, 0, 19).should.be["true"];
    return utils.between(19, 0, 20).should.be["true"];
  });
});
